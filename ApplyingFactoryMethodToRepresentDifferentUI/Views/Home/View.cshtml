@model ApplyingFactoryMethodToRepresentDifferentUI.Models.BaseModel

@{
    ViewData["Title"] = "View1";
}

<h1>View1</h1>

<h4>BaseModel</h4>
<hr />
<div class="row">
    <div class="col-md-4">
        <form asp-action="View1">
            <div asp-validation-summary="ModelOnly" class="text-danger"></div>
            <div class="form-group">
                <label asp-for="CommonField1" class="control-label"></label>
                <input asp-for="CommonField1" class="form-control" />
                <span asp-validation-for="CommonField1" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="CommonField2" class="control-label"></label>
                <input asp-for="CommonField2" class="form-control" />
                <span asp-validation-for="CommonField2" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label class="control-label">Type of object</label>
                <select onchange="" id="ddlObjectType">
                    <option value="0" selected>Select </option>
                    <option value="1">Type 1 </option>
                    <option value="2">Type 2 </option>
                </select>
            </div>
            <div id="divShowDifferentContent">

            </div>
            <div class="form-group">
                <input type="submit" value="Create" class="btn btn-primary" />
            </div>
        </form>
    </div>
</div>



@section Scripts {
    @{await Html.RenderPartialAsync("_ValidationScriptsPartial");}
    <script>
    $(document).ready(function () {
        handleDdlChange()
    })
    function handleDdlChange() {
        $("#ddlChange").change(function () {
            $.ajax({
                url: "@Url.Action("ShowDifferentContent")",
                data: {"derivedModelType":$(this).val()}
            }).done(function (html) {
                $("#divShowDifferentContent").html(html);
            });
        })
    }
    </script>
}
